<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zx.biri.ordercart.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="cn.zx.biri.common.pojo.entry.Order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="createtime" jdbcType="VARCHAR" property="createtime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="total" jdbcType="DOUBLE" property="total" />
    <result column="addressDetail" jdbcType="VARCHAR" property="addressDetail" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="adminId" jdbcType="INTEGER" property="adminId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="couponTypeId" jdbcType="INTEGER" property="couponTypeId" />
  </resultMap>
  <resultMap id="UserOrder" extends="BaseResultMap"  type="cn.zx.biri.common.pojo.response.UserOrder">
    <collection ofType="cn.zx.biri.common.pojo.response.UserOrderDetail" property="orderDetails">
      <id column="orderDetailId" jdbcType="INTEGER" property="id" />
      <result column="bookId" jdbcType="INTEGER" property="bookId" />
      <result column="bookNum" jdbcType="INTEGER" property="bookNum" />
      <result column="orderDetailSummoney" jdbcType="DOUBLE" property="summoney" />
      <association property="book" javaType="cn.zx.biri.common.pojo.entry.Book">
        <id column="bookId" jdbcType="INTEGER" property="id" />
        <result column="bookTitle" jdbcType="VARCHAR" property="title" />
        <result column="bookImagePath" jdbcType="VARCHAR" property="imagePath" />
      </association>
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userId, createtime, status, total, addressDetail, username, phone, adminId, remark, 
    couponTypeId
  </sql>
  <select id="getOrders" parameterType="java.util.HashMap" resultMap="UserOrder">
     select `order`.id as id,`order`.userId as userId,`order`.createtime AS createtime,`order`.`status` AS `status`,`order`.total as total,order.addressDetail AS addressDetail,
    orderdetail.id AS orderDetailId,orderdetail.bookId as bookId,orderdetail.bookNum as bookNum,orderdetail.summoney AS orderDetailSummoney,
    book.title AS bookTitle,book.imagePath AS bookImagePath,order.phone AS phone,order.userName AS userName FROM `order`,orderdetail,book WHERE `order`.id=orderdetail.orderId AND orderdetail.bookId = book.id
    AND `order`.userId= #{userId} AND `order`.status = #{status} ORDER BY createtime DESC
  </select>
  <select id="selectByExample" parameterType="cn.zx.biri.common.pojo.example.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `order`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `order`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `order`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.zx.biri.common.pojo.example.OrderExample">
    delete from `order`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.zx.biri.common.pojo.entry.Order">
    insert into `order` (id, userId, createtime,
      status, total, addressDetail, 
      username, phone, adminId, 
      remark, couponTypeId)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{createtime,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{total,jdbcType=DOUBLE}, #{addressDetail,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{adminId,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{couponTypeId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys = "true" keyProperty = "id" parameterType="cn.zx.biri.common.pojo.entry.Order">
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="addressDetail != null">
        addressDetail,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="adminId != null">
        adminId,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="couponTypeId != null">
        couponTypeId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        #{total,jdbcType=DOUBLE},
      </if>
      <if test="addressDetail != null">
        #{addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="couponTypeId != null">
        #{couponTypeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zx.biri.common.pojo.example.OrderExample" resultType="java.lang.Long">
    select count(*) from `order`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `order`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=DOUBLE},
      </if>
      <if test="record.addressDetail != null">
        addressDetail = #{record.addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.adminId != null">
        adminId = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.couponTypeId != null">
        couponTypeId = #{record.couponTypeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `order`
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userId,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      total = #{record.total,jdbcType=DOUBLE},
      addressDetail = #{record.addressDetail,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      adminId = #{record.adminId,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      couponTypeId = #{record.couponTypeId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zx.biri.common.pojo.entry.Order">
    update `order`
    <set>
      <if test="userId != null">
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=DOUBLE},
      </if>
      <if test="addressDetail != null">
        addressDetail = #{addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null">
        adminId = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="couponTypeId != null">
        couponTypeId = #{couponTypeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zx.biri.common.pojo.entry.Order">
    update `order`
    set userId = #{userId,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      total = #{total,jdbcType=DOUBLE},
      addressDetail = #{addressDetail,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      adminId = #{adminId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      couponTypeId = #{couponTypeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>