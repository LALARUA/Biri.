<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zx.biri.bookservice.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="cn.zx.biri.common.pojo.entry.Book">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="imagePath" jdbcType="VARCHAR" property="imagePath" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="isbn" jdbcType="BIGINT" property="isbn" />
    <result column="putaway" jdbcType="DATE" property="putaway" />
    <result column="sales" jdbcType="INTEGER" property="sales" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="authorId" jdbcType="INTEGER" property="authorId" />
    <result column="publishDate" jdbcType="VARCHAR" property="publishDate" />
    <result column="score" jdbcType="DOUBLE" property="score" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.zx.biri.common.pojo.entry.BookWithBLOBs">
    <result column="summary" jdbcType="LONGVARCHAR" property="summary" />
    <result column="catalog" jdbcType="LONGVARCHAR" property="catalog" />
  </resultMap>
  <resultMap id="BookListDisplay" type="cn.zx.biri.common.pojo.response.BookListDisplay">
    <id column="bookId" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="imagePath" jdbcType="VARCHAR" property="imagePath" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="price" jdbcType="DOUBLE" property="price" />
     <result column="score" jdbcType="DOUBLE" property="score" />
    <association property="author" javaType="cn.zx.biri.common.pojo.entry.Author">
      <id column="authorId" jdbcType="INTEGER" property="id" />
      <result column="authorName" jdbcType="VARCHAR" property="name" />
    </association>
    <collection property="tags" ofType="cn.zx.biri.common.pojo.entry.Tag">
      <id column="tagId" jdbcType="INTEGER" property="id" />
      <result column="tagName" jdbcType="VARCHAR" property="name" />
      <result column="tagfatherId" jdbcType="INTEGER" property="fatherId" />
    </collection>
  </resultMap>

  <sql id="selectBookListDisplaySql">
SELECT
book.id AS bookId,
book.title AS title,
book.imagePath AS imagePath,
book.publisher AS publisher,
book.price AS price,
authorId AS authorId,
author.`name` AS authorName,
book.score AS score,
tag.id AS tagId,
tag.`name` AS tagName,
tag.fatherId AS tagfatherId
from book,author,tag,bookWithTag WHERE book.authorId = author.id AND bookWithTag.bookId = book.id AND bookWithTag.tagId = tag.id
  </sql>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, imagePath, publisher, price, isbn, putaway, sales, stock, authorId, publishDate,
    score
  </sql>
  <sql id="Blob_Column_List">
    summary, catalog
  </sql>
  <select id="selectBookListDisplayByBookId" parameterType="java.lang.Integer" resultMap="BookListDisplay">
    <include refid="selectBookListDisplaySql"/>
    AND book.id=#{bookId}
  </select>
  <select id="selectByExampleWithBLOBs" parameterType="cn.zx.biri.common.pojo.example.BookExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.zx.biri.common.pojo.example.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.zx.biri.common.pojo.example.BookExample">
    delete from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.zx.biri.common.pojo.entry.BookWithBLOBs">
    insert into book (id, title, imagePath,
      publisher, price, isbn, 
      putaway, sales, stock, 
      authorId, publishDate, score,
      summary, catalog)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{imagePath,jdbcType=VARCHAR},
      #{publisher,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{isbn,jdbcType=BIGINT}, 
      #{putaway,jdbcType=DATE}, #{sales,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}, 
      #{authorId,jdbcType=INTEGER}, #{publishDate,jdbcType=VARCHAR}, #{score,jdbcType=DOUBLE},
      #{summary,jdbcType=LONGVARCHAR}, #{catalog,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.zx.biri.common.pojo.entry.BookWithBLOBs">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="imagePath != null">
        imagePath,
      </if>
      <if test="publisher != null">
        publisher,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="isbn != null">
        isbn,
      </if>
      <if test="putaway != null">
        putaway,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="authorId != null">
        authorId,
      </if>
      <if test="publishDate != null">
        publishDate,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="catalog != null">
        catalog,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="imagePath != null">
        #{imagePath,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="isbn != null">
        #{isbn,jdbcType=BIGINT},
      </if>
      <if test="putaway != null">
        #{putaway,jdbcType=DATE},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=INTEGER},
      </if>
      <if test="publishDate != null">
        #{publishDate,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="catalog != null">
        #{catalog,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zx.biri.common.pojo.example.BookExample" resultType="java.lang.Long">
    select count(*) from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.imagePath != null">
        imagePath = #{record.imagePath,jdbcType=VARCHAR},
      </if>
      <if test="record.publisher != null">
        publisher = #{record.publisher,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.isbn != null">
        isbn = #{record.isbn,jdbcType=BIGINT},
      </if>
      <if test="record.putaway != null">
        putaway = #{record.putaway,jdbcType=DATE},
      </if>
      <if test="record.sales != null">
        sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.authorId != null">
        authorId = #{record.authorId,jdbcType=INTEGER},
      </if>
      <if test="record.publishDate != null">
        publishDate = #{record.publishDate,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=DOUBLE},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.catalog != null">
        catalog = #{record.catalog,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update book
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      imagePath = #{record.imagePath,jdbcType=VARCHAR},
      publisher = #{record.publisher,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      isbn = #{record.isbn,jdbcType=BIGINT},
      putaway = #{record.putaway,jdbcType=DATE},
      sales = #{record.sales,jdbcType=INTEGER},
      stock = #{record.stock,jdbcType=INTEGER},
      authorId = #{record.authorId,jdbcType=INTEGER},
      publishDate = #{record.publishDate,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=DOUBLE},
      summary = #{record.summary,jdbcType=LONGVARCHAR},
      catalog = #{record.catalog,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      imagePath = #{record.imagePath,jdbcType=VARCHAR},
      publisher = #{record.publisher,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      isbn = #{record.isbn,jdbcType=BIGINT},
      putaway = #{record.putaway,jdbcType=DATE},
      sales = #{record.sales,jdbcType=INTEGER},
      stock = #{record.stock,jdbcType=INTEGER},
      authorId = #{record.authorId,jdbcType=INTEGER},
      publishDate = #{record.publishDate,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zx.biri.common.pojo.entry.BookWithBLOBs">
    update book
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="imagePath != null">
        imagePath = #{imagePath,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="isbn != null">
        isbn = #{isbn,jdbcType=BIGINT},
      </if>
      <if test="putaway != null">
        putaway = #{putaway,jdbcType=DATE},
      </if>
      <if test="sales != null">
        sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="authorId != null">
        authorId = #{authorId,jdbcType=INTEGER},
      </if>
      <if test="publishDate != null">
        publishDate = #{publishDate,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="catalog != null">
        catalog = #{catalog,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.zx.biri.common.pojo.entry.BookWithBLOBs">
    update book
    set title = #{title,jdbcType=VARCHAR},
      imagePath = #{imagePath,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      isbn = #{isbn,jdbcType=BIGINT},
      putaway = #{putaway,jdbcType=DATE},
      sales = #{sales,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      authorId = #{authorId,jdbcType=INTEGER},
      publishDate = #{publishDate,jdbcType=VARCHAR},
      score = #{score,jdbcType=DOUBLE},
      summary = #{summary,jdbcType=LONGVARCHAR},
      catalog = #{catalog,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zx.biri.common.pojo.entry.Book">
    update book
    set title = #{title,jdbcType=VARCHAR},
      imagePath = #{imagePath,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      isbn = #{isbn,jdbcType=BIGINT},
      putaway = #{putaway,jdbcType=DATE},
      sales = #{sales,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      authorId = #{authorId,jdbcType=INTEGER},
      publishDate = #{publishDate,jdbcType=VARCHAR},
      score = #{score,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>